"use client";

import { useState } from "react";

export default function ResetStressPage() {
  const [selectedCardIndex, setSelectedCardIndex] = useState<number | null>(null);
  const cards = [
    {
      title: "–ë—è—Å–∞–ª–≥–∞–ª—É—É–¥",
      desc: "–û–ª–æ–Ω —Ç”©—Ä–ª–∏–π–Ω —Ç–∞–π–≤—à—Ä—É—É–ª–∞—Ö –±—è—Å–∞–ª–≥–∞–ª, —É–Ω—Ç–∞—Ö “Ø–ª–≥—ç—Ä, —è–∞—Ä–∞–ª—Ç–∞–π —Ç—É—Å–ª–∞–º–∂–∏–π–Ω —Ö—ç—Å–≥“Ø“Ø–¥–∏–π–≥ –∞–≥—É—É–ª—Å–∞–Ω.",
      bg: "from-green-200 to-lime-100",
      label: "–ë—è—Å–∞–ª–≥–∞–ª",
      emoji: "üåø",
      content: (
        <div className="space-y-4">
          <h4 className="font-semibold text-lg">–ë—è—Å–∞–ª–≥–∞–ª—ã–Ω —Ö—ç—Å–≥“Ø“Ø–¥:</h4>
          <ul className="list-disc pl-5 space-y-2">
            <li>–ê–º—å—Å–≥–∞–ª—ã–Ω –±—è—Å–∞–ª–≥–∞–ª (10 –º–∏–Ω—É—Ç)</li>
            <li>–ë–∏–µ–∏–π–Ω —Ç–∞–Ω–∏–Ω –º—ç–¥—ç—Ö“Ø–π–Ω –±—è—Å–∞–ª–≥–∞–ª (15 –º–∏–Ω—É—Ç)</li>
            <li>–£–Ω—Ç—Ä–∞—Ö –±—è—Å–∞–ª–≥–∞–ª (20 –º–∏–Ω—É—Ç)</li>
            <li>–Ø–∞—Ä–∞–ª—Ç–∞–π —Ç—É—Å–ª–∞–º–∂–∏–π–Ω 7 —Ö—ç–≤–∏–π–Ω –∞—Ä–≥–∞</li>
          </ul>
        </div>
      )
    },
    {
      title: "–û—é—É–Ω—ã –¥–∞—Å–≥–∞–ª",
      desc: "–°–∞–Ω–∞—Ö –æ–π, –∞–Ω—Ö–∞–∞—Ä–∞–ª, —Å—ç—Ç–≥—ç—Ö —Ö—É—Ä–¥—ã–≥ —Ö”©–≥–∂“Ø“Ø–ª—ç—Ö –≥—É—Ä–≤–∞–Ω —Ç”©—Ä–ª–∏–π–Ω —Ç–æ–≥–ª–æ–æ–º—Ç–æ–π.",
      bg: "from-pink-100 to-sky-200",
      label: "–û—é—É–Ω—ã —Ç–æ–≥–ª–æ–æ–º",
      emoji: "üß†",
      content: (
        <div className="space-y-4">
          <h4 className="font-semibold text-lg">–û—é—É–Ω—ã —Ç–æ–≥–ª–æ–æ–º—É—É–¥:</h4>
          <div className="grid grid-cols-2 gap-4">
            <div className="p-3 bg-white rounded-lg shadow-sm">
              <h5 className="font-medium mb-1">–°–∞–Ω–∞—Ö –æ–π–Ω —Ç–æ–≥–ª–æ–æ–º</h5>
              <p className="text-sm">–ö–∞—Ä—Ç—É—É–¥—ã–≥ –¥–∞—Ä–∂ –¥“Ø—Ä—Å–∏–π–≥ —Å–∞–Ω–∞</p>
            </div>
            <div className="p-3 bg-white rounded-lg shadow-sm">
              <h5 className="font-medium mb-1">–•—É—Ä–¥–Ω—ã —Ç–æ–æ–ª–æ–ª</h5>
              <p className="text-sm">–¢–æ–æ–Ω—É—É–¥—ã–≥ —Ö—É—Ä–¥–∞–Ω –Ω—ç–º—ç—Ö</p>
            </div>
          </div>
        </div>
      )
    },
    {
      title: "–¢–∞–ª–∞—Ä—Ö–ª—ã–Ω –¥–∞–¥–∞–ª",
      desc: "”®–¥”©—Ä –±“Ø—Ä –∂–∏–∂–∏–≥ —Å–∞–π–Ω –∑“Ø–π–ª—Å—ç–¥ —Ç–∞–ª–∞—Ä—Ö–∞—Ö –¥–∞–¥–∞–ª —Ö—ç–≤—à“Ø“Ø–ª.",
      bg: "from-yellow-100 to-orange-100",
      label: "–¢–∞–ª–∞—Ä—Ö–∞–ª",
      emoji: "üôè",
      content: (
        <div className="space-y-4">
          <h4 className="font-semibold text-lg">”®–Ω”©”©–¥—Ä–∏–π–Ω —Ç–∞–ª–∞—Ä—Ö–∞–ª:</h4>
          <textarea 
            className="w-full h-32 p-3 rounded-lg border focus:outline-none focus:ring-2 focus:ring-orange-200"
            placeholder="”®–Ω”©”©–¥”©—Ä –±–∏ —é—É–Ω–¥ —Ç–∞–ª–∞—Ä—Ö–ª–∞–∞ –∏–ª—ç—Ä—Ö–∏–π–ª—ç—Ö –≤—ç?..."
          />
          <button className="bg-orange-100 hover:bg-orange-200 px-4 py-2 rounded-lg transition-colors">
            –•–∞–¥–≥–∞–ª–∞—Ö
          </button>
        </div>
      )
    },
  ];

  const handleCardClick = (index: number) => {
    setSelectedCardIndex(index);
  };

  const closeModal = () => {
    setSelectedCardIndex(null);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-white via-blue-50 to-blue-100 text-gray-800">
      {selectedCardIndex !== null && (
        <div 
          className="fixed inset-0 bg-white[200] bg-opacity-70 backdrop-blur-sm z-50 flex items-center justify-center p-4"
          onClick={closeModal}
        >
          <div 
            className={`bg-gradient-to-br ${cards[selectedCardIndex].bg} rounded-2xl p-6 max-w-2xl w-full relative max-h-[90vh] overflow-y-auto`}
            onClick={(e) => e.stopPropagation()}
          >
            <button 
              onClick={closeModal}
              className="absolute top-4 right-4 text-gray-600 hover:text-gray-800 transition-colors"
            >
              ‚úï
            </button>
            <div className="text-4xl mb-3">{cards[selectedCardIndex].emoji}</div>
            <h3 className="text-xl font-semibold text-gray-800 mb-4">
              {cards[selectedCardIndex].title}
            </h3>
            {cards[selectedCardIndex].content}
          </div>
        </div>
      )}

      <div className={`${selectedCardIndex !== null ? 'blur-sm' : ''} transition-all duration-300`}>
        <header className="flex items-center justify-between px-6 py-4">
          <h1 className="text-xl font-bold text-blue-950">mindbooster</h1>
          <nav className="hidden md:flex gap-6 text-sm text-gray-700">
            <a href="#">–•—ç—Ä—Ö—ç–Ω –∞–∂–∏–ª–ª–∞–¥–∞–≥ –≤—ç</a>
            <a href="#">–ë–∏–¥–Ω–∏–π —Ç—É—Ö–∞–π</a>
            <a href="#">–ù”©”©—Ü</a>
          </nav>
        </header>

        <section className="px-6 py-10">
          <h2 className="text-2xl font-bold text-center mb-8 text-blue-900">
            –°—Ç—Ä–µ—Å—Å –±–æ–ª –∑“Ø–≥—ç—ç—Ä –ª –¥–æ—Ö–∏–æ ‚Äî –æ–¥–æ–æ —Ç–∞–π–≤—à–∏—Äüß≠
          </h2>
          <h5 className="text-base font-medium text-center mb-8 text-gray-900">
            –¢–∞–Ω—ã —Ç–∞—Ä—Ö–∏ –∞–º—Ä–∞—Ö —ç—Ä—Ö—Ç—ç–π. –û–¥–æ–æ —Ç–∞–π–≤—à–∏—Ä—á, —ç—Ä—á —Ö“Ø—á—ç—ç —Å—ç—Ä–≥—ç—ç–Ω—ç “Ø“Ø.
          </h5>

          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3 gap-5 max-w-[80%] mx-auto p-8">
            {cards.map((card, index) => (
              <div
                key={index}
                onClick={() => handleCardClick(index)}
                className={`bg-gradient-to-br ${card.bg} rounded-2xl p-6 cursor-pointer transform transition duration-300 hover:scale-110 hover:shadow-xl hover:rotate-1 hover:animate-shake max-w-[370px] h-[300px] mx-auto`}
              >
                <div className="text-4xl mb-3">{card.emoji}</div>
                <h3 className="text-xl font-semibold text-gray-800 mb-2">{card.title}</h3>
                <p className="text-sm text-gray-700">{card.desc}</p>
              </div>
            ))}
          </div>
        </section>
      </div>

      <style jsx>{`
        @keyframes shake {
          0% { transform: translateX(0); }
          25% { transform: translateX(-10px); }
          50% { transform: translateX(10px); }
          75% { transform: translateX(-10px); }
          100% { transform: translateX(10px); }
        }
        .hover\:animate-shake:hover {
          animation: shake 0.5s ease-in-out infinite;
        }
      `}</style>
    </div>
  );
}